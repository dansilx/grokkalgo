from functools import lru_cache

@lru_cache(maxsize=None)
def fib(n):
    print (f'fib({n})')
    if n <= 2: return 1
    return fib (n-1) + fib(n-2)

print(fib(100)) #a maneira que se resolve um fibonacci é utilizando uma Estrutura de Dados criando um dicionário ou guardando na memória do sistema operacional

'''
fib(100)
fib(99)
fib(98)
fib(97)
fib(96)
fib(95)
fib(94)
fib(93)
fib(92)
fib(91)
fib(90)
fib(89)
fib(88)
fib(87)
fib(86)
fib(85)
fib(84)
fib(83)
fib(82)
fib(81)
fib(80)
fib(79)
fib(78)
fib(77)
fib(76)
fib(75)
fib(74)
fib(73)
fib(72)
fib(71)
fib(70)
fib(69)
fib(68)
fib(67)
fib(66)
fib(65)
fib(64)
fib(63)
fib(62)
fib(61)
fib(60)
fib(59)
fib(58)
fib(57)
fib(56)
fib(55)
fib(54)
fib(53)
fib(52)
fib(51)
fib(50)
fib(49)
fib(48)
fib(47)
fib(46)
fib(45)
fib(44)
fib(43)
fib(42)
fib(41)
fib(40)
fib(39)
fib(38)
fib(37)
fib(36)
fib(35)
fib(34)
fib(33)
fib(32)
fib(31)
fib(30)
fib(29)
fib(28)
fib(27)
fib(26)
fib(25)
fib(24)
fib(23)
fib(22)
fib(21)
fib(20)
fib(19)
fib(18)
fib(17)
fib(16)
fib(15)
fib(14)
fib(13)
fib(12)
fib(11)
fib(10)
fib(9)
fib(8)
fib(7)
fib(6)
fib(5)
fib(4)
fib(3)
fib(2)
fib(1)
354224848179261915075
'''